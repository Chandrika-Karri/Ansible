---
- name: provisioning aws resources
  hosts: localhost
  connection: local
  vars_files:
    secrets.yml
  tasks:
    - name: create a VPC 
      ec2_vpc_net:
        name: vpc-playbook
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"  
        cidr_block: 192.168.0.0/16
        region: us-east-1
        state: present
        tags:
          Name: vpc
      register: vpc
    - name: Create public subnet 
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"  
        cidr: 192.168.0.0/24
        region: us-east-1
        map_public: true
        state: present
        tags:
          Name: subnet01
      register: subnet01  
    - name: Create private subnet 
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"  
        cidr: 192.168.1.0/24
        region: us-east-1
        map_public: true
        state: present
        tags:
          Name: subnet02
      register: subnet02
    - name: Create Internet gateway
      ec2_vpc_igw:
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"  
        vpc_id: "{{ vpc.vpc.id }}"
        region: us-east-1
        state: present
      register: igw  
    - name: route table
      ec2_vpc_route_table:
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"  
        vpc_id: "{{ vpc.vpc.id }}"
        region: us-east-1
        tags:
          Name: vpc route table
        subnets:
          - "{{ subnet01.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: routetable
    - name: Security group
      ec2_group:
        name: Create new security group
        description: allow ssh and port 80 traffic
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"  
        vpc_id: "{{ vpc.vpc.id }}"
        region: us-east-1
        state: present
        rules:
          - proto: tcp
            group_desc: allow port 80 traffic  
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            group_desc: allow ssh traffic  
            to_port: 22
            cidr_ip: 0.0.0.0/0	
        rules_egress:
          - proto: all
            group_desc: allow all traffic
            cidr_ip: 0.0.0.0/0	
        tags:
          Name: Outbound and inbound rules	
      register: sg	  
    - name: start an ec2 instance 
      ec2_instance:
        name: Instance
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"  
        key_name: AWSkeypair
        region: us-east-1
        vpc_subnet_id: "{{ subnet01.subnet.id }}"
        instance_type: t3.micro
        security_group: "{{ sg.group_name }}"
        network:
          assign_public_ip: true
        image_id: ami-0a3c3a20c09d6f377
        tags:
          Env: test
    - name: create a simple s3 bucket
      s3_bucket:
        name: s3bkt
        state: present
        region: us-east-1
        versioning: true
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"
        tags:
          Env: prod
